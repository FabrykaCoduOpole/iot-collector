name: 'Terraform CI/CD'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/terraform/environments/dev

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform Format
      run: terraform fmt -check -recursive ../../

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -input=false
      if: github.event_name == 'pull_request'

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false

    - name: Configure kubectl
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        aws eks update-kubeconfig --region us-east-1 --name $(terraform output -raw eks_cluster_name)

    - name: Build and Push Docker Images
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        # Get ECR repository URLs
        MQTT_SERVICE_REPO=$(terraform output -raw ecr_mqtt_service_repository_url)
        API_GATEWAY_REPO=$(terraform output -raw ecr_api_gateway_repository_url)
        
        # Authenticate Docker with ECR
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $(echo $MQTT_SERVICE_REPO | cut -d'/' -f1)
        
        # Build and push MQTT service image
        docker build -t $MQTT_SERVICE_REPO:latest -f ../../../docker/mqtt-service/Dockerfile ../../../
        docker push $MQTT_SERVICE_REPO:latest
        
        # Build and push API Gateway image
        docker build -t $API_GATEWAY_REPO:latest -f ../../../docker/api-gateway/Dockerfile ../../../
        docker push $API_GATEWAY_REPO:latest
